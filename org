#!/usr/bin/env bash
# Create a patch for this session.
# Writes to: /work/.org/runs/<timestamp-$$>/session.patch
# Backends:
#   live   : /work is a real repo     → git -C /work diff --binary HEAD …
#   review : repo metadata on /project (RO), worktree at /work
#            → temporary index in /work/.org/tmp/, include new/deleted files.

set -Eeuo pipefail

ROOT="/work"
RUNS_DIR="$ROOT/.org/runs"
TMP_DIR="$ROOT/.org/tmp"
mkdir -p "$RUNS_DIR" "$TMP_DIR"

id="$(date -u +%Y%m%d%H%M%S)-$$"
run_dir="$RUNS_DIR/$id"
patch="$run_dir/session.patch"
mkdir -p "$run_dir"

mode="$(printf '%s' "${ORG_REVIEW_MODE:-live}" | tr '[:upper:]' '[:lower:]')"

echo "[org-patch-create] mode=${mode}"

# Silence "unsafe repository" warnings (best-effort)
git config --global --add safe.directory /project >/dev/null 2>&1 || true
git config --global --add safe.directory /work    >/dev/null 2>&1 || true

if [[ "$mode" = review ]]; then
  # Validate /project repo (read-only)
  git -C /project rev-parse --is-inside-work-tree >/dev/null 2>&1 \
    || { echo "org-patch-create: /project is not a git repo" >&2; : > "$patch"; exit 0; }

  # Wire git to use project metadata (RO) + staged copy at /work
  export GIT_DIR=/project/.git
  export GIT_WORK_TREE=/work

  # Use a throwaway index so we never touch /project/.git
  export GIT_INDEX_FILE="$TMP_DIR/index.$$"
  trap 'rm -f "$GIT_INDEX_FILE" 2>/dev/null || true' EXIT

  # Reset temp index to HEAD (no checkout)
  : > "$GIT_INDEX_FILE"
  git read-tree -m HEAD

  # Stage all changes from /work into the temp index, excluding runtime state
  git add -A -- . ':(exclude).org/**'

  # Compare temp index vs HEAD; write a binary-safe patch
  git -c color.ui=false --no-pager \
    diff-index --cached --binary HEAD -- . ':(exclude).org/**' > "$patch" || true

else
  # LIVE: /work must be a repo
  git -C /work rev-parse --is-inside-work-tree >/dev/null 2>&1 \
    || { echo "org-patch-create: /work is not a git repo" >&2; : > "$patch"; exit 0; }

  git -C /work -c color.ui=false --no-pager \
    diff --binary HEAD -- . ':(exclude).org/**' > "$patch" || true
fi

# Ensure the file exists even if no hunks (deterministic)
: > "$patch"

echo "[org-patch-create] wrote: $patch"
