#!/usr/bin/env bash
# org: robust launcher for the repo's Bun entrypoint.
# - Resolves symlinks to find the repo path.
# - Preserves caller's CWD (runs agents in the directory you invoked `org` from).
# - Makes Bun discoverable even when PATH is sanitized (non-interactive shells, sudo).
# - Allows manual override via ORG_BUN / BUN_BIN.
set -euo pipefail

# --- resolve repo directory (follow symlinks) ---------------------------------
SELF="$0"
if command -v python3 >/dev/null 2>&1; then
  REAL="$(python3 -c 'import os,sys; print(os.path.realpath(sys.argv[1]))' "$SELF")"
elif command -v readlink >/dev/null 2>&1; then
  # BSD readlink may lack -f; this still helps if available
  REAL="$(readlink -f "$SELF" 2>/dev/null || echo "$SELF")"
else
  REAL="$SELF"
fi
APPDIR="$(cd "$(dirname "$REAL")" && pwd)"

RUNNER="$APPDIR/runner.ts"
ENTRY="$APPDIR/src/app.ts"

# --- environment --------------------------------------------------------------
# Expose repo-local helpers first
export PATH="$APPDIR:$APPDIR/scripts:$PATH"

# Ensure Bun is discoverable even when PATH is sanitized (non-interactive, sudo)
PATH="$HOME/.bun/bin:/usr/local/bin:/usr/bin:$PATH"

# If invoked via sudo, also try the invoking user's ~/.bun/bin
if [[ -n "${SUDO_USER:-}" ]]; then
  SUDO_HOME="$(getent passwd "$SUDO_USER" 2>/dev/null | awk -F: '{print $6}')"
  [[ -z "${SUDO_HOME:-}" ]] && SUDO_HOME="/home/$SUDO_USER"
  if [[ -d "$SUDO_HOME/.bun/bin" ]]; then
    PATH="$SUDO_HOME/.bun/bin:$PATH"
  fi
fi
export PATH

# Respect explicit caller override of working directory
export ORG_CALLER_CWD="${ORG_CALLER_CWD:-$(pwd)}"
export ORG_ENTRY="$ENTRY"
export ORG_APPDIR="$APPDIR"

# --- resolve Bun binary -------------------------------------------------------
# Allow override via ORG_BUN or BUN_BIN
BUN_BIN="${ORG_BUN:-${BUN_BIN:-}}"
if [[ -z "${BUN_BIN:-}" ]]; then
  if command -v bun >/dev/null 2>&1; then
    BUN_BIN="$(command -v bun)"
  else
    for p in "$HOME/.bun/bin/bun" "/usr/local/bin/bun" "/usr/bin/bun"; do
      if [[ -x "$p" ]]; then BUN_BIN="$p"; break; fi
    done
  fi
fi

if [[ -z "${BUN_BIN:-}" ]]; then
  echo "org: bun not found. PATH=$PATH" >&2
  echo "hint: install Bun (curl -fsSL https://bun.sh/install | bash) or set ORG_BUN=/path/to/bun" >&2
  exit 127
fi

# --- optional debug -----------------------------------------------------------
if [[ "${ORG_DEBUG:-}" == "1" || "${DEBUG:-}" == "1" ]]; then
  {
    echo "[org] APPDIR=$APPDIR"
    echo "[org] RUNNER=$RUNNER"
    echo "[org] ORG_CALLER_CWD=$ORG_CALLER_CWD"
    echo "[org] bun=$BUN_BIN"
    echo "[org] PATH=$PATH"
  } >&2
fi

# --- run ----------------------------------------------------------------------
# Keep the program's working directory as the caller's CWD.
exec "$BUN_BIN" "$RUNNER" --cwd "$ORG_CALLER_CWD" "$@"
