#!/usr/bin/env bash
set -Eeuo pipefail

ENGINE="${ORG_ENGINE:-podman}"
IMAGE="${ORG_IMAGE:-localhost/org-build:debian-12}"

PROJECT="${ORG_PROJECT_DIR:-$PWD}"
WORKDIR="${ORG_WORK_DIR:-$PROJECT/.org/work}"
RUNTIME_ORG_DIR="$PROJECT/.org"
mkdir -p "$WORKDIR" "$RUNTIME_ORG_DIR"

# Resolve org repo (where this script lives), not CWD
SELF="${BASH_SOURCE[0]}"
while [ -h "$SELF" ]; do
  DIR="$(cd -P "$(dirname "$SELF")" && pwd)"
  LINK="$(readlink "$SELF")"
  [[ "$LINK" != /* ]] && SELF="$DIR/$LINK" || SELF="$LINK"
done
ORG_REPO_DIR="$(cd -P "$(dirname "$SELF")" && pwd)"
ORG_SCRIPTS_DIR="$ORG_REPO_DIR/scripts"

if [[ ! -d "$ORG_SCRIPTS_DIR" ]]; then
  echo "[org] error: expected org scripts dir not found: $ORG_SCRIPTS_DIR" >&2
  exit 2
fi

echo "[org] engine = $ENGINE"
echo "[org] image  = $IMAGE"
echo "[org] file   = $PROJECT/Containerfile"
echo "[org] repo   = $PROJECT"
echo "[org] org-scripts = $ORG_SCRIPTS_DIR -> /scripts (ro)"

# Pass only ORG_* through
mapfile -t ORG_ENV_FLAGS < <(env | awk -F= '/^ORG_[A-Z0-9_]+=/{print "--env="$1}')

MOUNTS=(
  -v "$PROJECT":/project:ro
  -v "$WORKDIR":/work:rw
  -v "$RUNTIME_ORG_DIR":/work/.org:rw
  -v "$ORG_SCRIPTS_DIR":/scripts:ro          # keep this
  # -v "$ORG_SCRIPTS_DIR":/work/scripts:ro    # ← removed: breaks rsync to /work
)

COMMON=( --rm -it --name "org-$RANDOM" --network=none --pids-limit=512 --cpus=2 --memory=2g )

case "$ENGINE" in
  podman|docker)
    exec "$ENGINE" run "${COMMON[@]}" "${MOUNTS[@]}" "${ORG_ENV_FLAGS[@]}" "$IMAGE" org "$@"
    ;;
  *) echo "Unsupported engine: $ENGINE" >&2; exit 2;;
esac
