# .org/config/org.lima.yaml
images:
  - location: "https://cloud-images.ubuntu.com/noble/current/noble-server-cloudimg-amd64.img"
    arch: "x86_64"
  - location: "https://cloud-images.ubuntu.com/noble/current/noble-server-cloudimg-arm64.img"
    arch: "aarch64"

cpus: 4
memory: "8GiB"
disk: "60GiB"

mounts:
  - location: "~/dev"
    mountPoint: "/home/{{.User}}.linux/dev"
    writable: true

provision:
  - mode: system
    when: once
    script: |
      set -euxo pipefail
      export DEBIAN_FRONTEND=noninteractive
      apt-get update
      apt-get install -y sudo ufw git curl ca-certificates bash-completion jq
      printf '%s ALL=(ALL) NOPASSWD:ALL\n' '{{.User}}' > /etc/sudoers.d/90-{{.User}}-nopasswd
      chmod 0440 /etc/sudoers.d/90-{{.User}}-nopasswd
      cat >/etc/profile.d/10-org-help.sh <<'EOF'
      echo
      echo "┌────────────── org VM ──────────────"
      echo "│ Connect:   lima shell org"
      echo "│ Project:   cd ~/dev/org"
      echo "│ Run org:   org --ui console"
      echo "└────────────────────────────────────"
      echo
      EOF
  - mode: user
    when: always   # re-run on each start; guarded below so it’s cheap
    script: |
      set -euxo pipefail
      mkdir -p ~/.bashrc.d
      cat >~/.bashrc.d/org.sh <<'EOF'
      PS1='\[\e[36m\]\u@org:\w\[\e[0m\]$ '
      [[ ":$PATH:" != *":$HOME/.local/bin:"* ]] && export PATH="$HOME/.local/bin:$PATH"
      [[ ":$PATH:" != *":$HOME/.bun/bin:"*   ]] && export PATH="$HOME/.bun/bin:$PATH"
      EOF
      grep -q '.bashrc.d' ~/.bashrc 2>/dev/null || \
        printf '\nfor f in ~/.bashrc.d/*.sh; do [ -r "$f" ] && . "$f"; done\n' >> ~/.bashrc

      mkdir -p "$HOME/dev"
      if [ ! -d "$HOME/dev/org/.git" ]; then
        git clone --depth=1 https://github.com/tjamescouch/org.git "$HOME/dev/org"
      else
        git -C "$HOME/dev/org" fetch --quiet || true
        git -C "$HOME/dev/org" reset --hard origin/HEAD || true
      fi

      # Only run installer if not already installed (cheap guard).
      if ! command -v org >/dev/null 2>&1; then
        ORG_INSTALL_SUDO=yes ORG_INSTALL_LAUNCH=no \
        bash "$HOME/dev/org/install.sh" --build-image || true
      fi

ssh:
  localPort: 0
firmware:
  legacyBIOS: false
