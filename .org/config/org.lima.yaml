# .org/config/org.lima.yaml
images:
  - location: "https://cloud-images.ubuntu.com/noble/current/noble-server-cloudimg-amd64.img"
    arch: "x86_64"
  - location: "https://cloud-images.ubuntu.com/noble/current/noble-server-cloudimg-arm64.img"
    arch: "aarch64"

cpus: 4
memory: "8GiB"
disk: "60GiB"   # VM disk; host ~/dev is bind-mounted and does NOT consume this

mounts:
  - location: "~/dev"
    mountPoint: "/home/{{.User}}.linux/dev"
    writable: true

provision:
  - mode: system
    script: |
      set -euxo pipefail
      export DEBIAN_FRONTEND=noninteractive
      apt-get update
      apt-get install -y sudo ufw git curl ca-certificates jq unzip bash-completion
      printf '%s ALL=(ALL) NOPASSWD:ALL\n' '{{.User}}' > /etc/sudoers.d/90-{{.User}}-nopasswd
      chmod 0440 /etc/sudoers.d/90-{{.User}}-nopasswd

  - mode: user
    script: |
      set -euxo pipefail
      mkdir -p ~/.bashrc.d
      # --- DISTINCT, COLOURFUL VM PROMPT ---
      cat >~/.bashrc.d/10-org-prompt.sh <<'EOF'
      # Shorten deep paths a bit
      export PROMPT_DIRTRIM=2
      # Colourful, unmistakable VM prompt:  [VM] user@host:cwd $
      # magenta [VM], cyan user@host, green cwd, reset, then $/# as usual
      PS1='\[\e[1;95m\][VM]\[\e[0m\] \[\e[1;36m\]\u@\h\[\e[0m\]:\[\e[1;32m\]\w\[\e[0m\]\$ '
      EOF

      # PATH conveniences
      cat >~/.bashrc.d/20-org-path.sh <<'EOF'
      [[ ":$PATH:" != *":$HOME/.local/bin:"* ]] && export PATH="$HOME/.local/bin:$PATH"
      [[ ":$PATH:" != *":$HOME/.bun/bin:"*   ]] && export PATH="$HOME/.bun/bin:$PATH"
      EOF

      # Load our snippets on login
      grep -q '.bashrc.d' ~/.bashrc 2>/dev/null || \
        printf '\nfor f in ~/.bashrc.d/*.sh; do [ -r "$f" ] && . "$f"; done\n' >> ~/.bashrc

      # Ensure repo present
      mkdir -p "$HOME/dev"
      if [ ! -d "$HOME/dev/org/.git" ]; then
        git clone --depth=1 https://github.com/tjamescouch/org.git "$HOME/dev/org"
      else
        git -C "$HOME/dev/org" fetch --quiet || true
        git -C "$HOME/dev/org" reset --hard origin/HEAD || true
      fi

      # Non-interactive install; ends with firewall locked down
      ORG_INSTALL_SUDO=yes ORG_INSTALL_LAUNCH=no \
      bash "$HOME/dev/org/install.sh" --build-image || true

ssh:
  localPort: 0
firmware:
  legacyBIOS: false
