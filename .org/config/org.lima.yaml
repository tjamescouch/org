# org.lima.yaml â€” one-command install, prewarmed image, reliable logs, scratch tmpfs, no git in VM

images:
  - location: "https://cloud-images.ubuntu.com/noble/current/noble-server-cloudimg-amd64.img"
    arch: "x86_64"
  - location: "https://cloud-images.ubuntu.com/noble/current/noble-server-cloudimg-arm64.img"
    arch: "aarch64"

cpus: 4
memory: "8GiB"
disk: "40GiB"

mounts:
  - location: "~/dev"
    mountPoint: "/home/{{.User}}.linux/dev"
    writable: true

networks:

provision:
  # ---- SYSTEM PHASE (root) ----
  - mode: system
    script: |
      # POSIX-sh friendly logging
      LOG_FILE="/var/log/org-provision-system.log"
      mkdir -p /var/log
      : > "$LOG_FILE"
      chmod 0644 "$LOG_FILE"
      export PS4='+ [$(date -Is)] '
      exec >>"$LOG_FILE" 2>&1
      set -eux

      echo "=== SYSTEM PROVISION START $(date -Is) ==="

      export DEBIAN_FRONTEND=noninteractive
      apt-get update
      apt-get install -y software-properties-common ca-certificates curl gnupg
      add-apt-repository -y universe
      apt-get update

      # Podman + rootless deps + essentials
      apt-get install -y \
        podman uidmap slirp4netns fuse-overlayfs iptables \
        containernetworking-plugins \
        ufw git jq unzip bash-completion

      # Per-user scratch tmpfs (1GiB, noexec,nosuid,nodev)
      SCRATCH_DIR="/home/{{.User}}.linux/scratch"
      mkdir -p "$SCRATCH_DIR"
      if ! grep -q " $SCRATCH_DIR " /etc/fstab; then
        echo "tmpfs $SCRATCH_DIR tmpfs rw,nosuid,nodev,noexec,relatime,size=1g 0 0" >> /etc/fstab
      fi
      mountpoint -q "$SCRATCH_DIR" || mount "$SCRATCH_DIR"

      # Passwordless sudo for the login user; SSH for limactl shell
      printf '%s ALL=(ALL) NOPASSWD:ALL\n' '{{.User}}' > /etc/sudoers.d/90-{{.User}}-nopasswd
      chmod 0440 /etc/sudoers.d/90-{{.User}}-nopasswd
      systemctl enable --now ssh

      echo "=== NETWORK OPEN disable before using ==="
      echo "=== SYSTEM PROVISION END $(date -Is) ==="

  # ---- USER PHASE ({{.User}}.linux) ----
  - mode: user
    script: |
      LOG_DIR="$HOME/.org/logs"
      mkdir -p "$LOG_DIR"
      LOG_FILE="$LOG_DIR/org-provision-user.log"
      export PS4='+ [$(date -Is)] '
      exec >>"$LOG_FILE" 2>&1
      set -eux

      echo "=== USER PROVISION START $(date -Is) ==="

      # Shell init
      if ! grep -q "\. ~/.bashrc" ~/.bash_profile 2>/dev/null; then
        printf '[ -r ~/.bashrc ] && . ~/.bashrc\n' >> ~/.bash_profile
      fi
      mkdir -p ~/.bashrc.d
      if ! grep -q ".bashrc.d" ~/.bashrc 2>/dev/null; then
        printf '\nfor f in ~/.bashrc.d/*.sh; do [ -r "$f" ] && . "$f"; done\n' >> ~/.bashrc
      fi
      cat >~/.bashrc.d/10-org-prompt.sh <<'EOF'
      export PROMPT_DIRTRIM=2
      PS1='\[\e[1;95m\][VM]\[\e[0m\] \[\e[1;36m\]\u@\h\[\e[0m\]:\[\e[1;32m\]\w\[\e[0m\]\$ '
      EOF

      # Require host bind-mounted repo; no git in VM
      if [ ! -d "$HOME/dev/org/.git" ]; then
        echo "ERROR: Expected host bind mount at $HOME/dev/org (.git missing)."
        echo "HINT (on host):  mkdir -p ~/dev && git clone https://github.com/tjamescouch/org.git ~/dev/org"
        exit 1
      fi

      # Prewarm container image during provisioning (blocks until finished)
      cd "$HOME/dev/org"
      SANDBOX_BACKEND=podman ORG_ENGINE=podman \
      bash ./install.sh

      echo "=== NETWORK OPEN disable before using org ==="
      echo "=== USER PROVISION END $(date -Is) ==="

ssh:
  localPort: 0
firmware:
  legacyBIOS: false
