#!/usr/bin/env bash
# scripts/tmux-launcher.sh
# Host helper. Runs the image and mounts the **target repo** at /work.
#
# Examples:
#   ./scripts/tmux-launcher.sh                              # use $PWD as repo → /work, tmux UI
#   ./scripts/tmux-launcher.sh --ui console                 # console UI
#   ./scripts/tmux-launcher.sh --repo owner/repo            # clone into .org/workspaces/… and use it
#   ./scripts/tmux-launcher.sh --repo https://github.com/…  # full URL; optional --branch dev
#
# Env:
#   SANDBOX_BACKEND=podman|docker  (default: podman)
#   ORG_IMAGE=localhost/org-build:debian-12
#   ORG_PROJECT_DIR=/path/to/base   (workspace root; default $PWD)

set -Eeuo pipefail

ENGINE="${SANDBOX_BACKEND:-podman}"
IMAGE="${ORG_IMAGE:-localhost/org-build:debian-12}"
MODE="tmux"
REPO_SPEC=""
BRANCH=""
HOST_ROOT="${ORG_PROJECT_DIR:-$PWD}"

# ---- parse args ----
while [[ $# -gt 0 ]]; do
  case "$1" in
    --ui)      shift; MODE="${1:-tmux}"; shift || true ;;
    --ui=*)    MODE="${1#--ui=}"; shift ;;
    --repo)    shift; REPO_SPEC="${1:-}"; shift || true ;;
    --repo=*)  REPO_SPEC="${1#--repo=}"; shift ;;
    --branch)  shift; BRANCH="${1:-}"; shift || true ;;
    --branch=*)BRANCH="${1#--branch=}"; shift ;;
    -h|--help|help)
      cat >&2 <<'H'
Usage: scripts/tmux-launcher.sh [--ui tmux|console] [--repo <url|owner/repo>] [--branch <name>]
H
      exit 0 ;;
    *)
      echo "WARN: ignoring arg: $1" >&2; shift ;;
  esac
done

if ! command -v "${ENGINE}" >/dev/null 2>&1; then
  echo "ERROR: ${ENGINE} not found on host." >&2
  exit 1
fi

slugify() {
  # filesystem-safe slug
  printf "%s" "$1" \
  | tr '[:upper:]' '[:lower:]' \
  | sed -E 's#^https?://##; s#\.git$##; s#[^a-z0-9]+#-#g; s#^-+##; s#-+$##'
}

ensure_repo_dir() {
  local target="$1" url="$2"
  mkdir -p "$(dirname "$target")"
  if [[ ! -d "$target/.git" ]]; then
    local branch_opt=()
    [[ -n "${BRANCH}" ]] && branch_opt=(--branch "${BRANCH}")
    git clone --depth 1 "${branch_opt[@]}" "$url" "$target"
  fi
}

TARGET_DIR="${HOST_ROOT}"

if [[ -n "${REPO_SPEC}" ]]; then
  if [[ "${REPO_SPEC}" =~ ^(https?://|git@) ]]; then
    REPO_URL="${REPO_SPEC}"
  else
    REPO_URL="https://github.com/${REPO_SPEC}.git"
  fi
  SLUG="$(slugify "${REPO_URL}")"
  WORKSPACES="${HOST_ROOT}/.org/workspaces"
  TARGET_DIR="${WORKSPACES}/${SLUG}"
  ensure_repo_dir "${TARGET_DIR}" "${REPO_URL}"
fi

exec "${ENGINE}" run --rm -it \
  -v "${TARGET_DIR}:/work" -w /work \
  "${IMAGE}" org --ui "${MODE}"
