#!/usr/bin/env bash
# org-launcher-tmux
# Single-command tmux launcher for org that preserves a real TTY and logs pane output.
# Usage: org --ui tmux [app-args...]
#
# Behavior:
# - Creates/attaches a tmux session.
# - Runs the app inside a PTY (via `script`) so stdout/stderr are interactive & visible.
# - Pipes the pane to a rotating log file without breaking TTY.
# - Exits cleanly back to the shell on Ctrl+C (no frozen "Pane is dead").

set -Eeuo pipefail

# -------- Config (override via environment if needed) -------------------------
ORG_WORKDIR_DEFAULT="/work"
ORG_WORKDIR="${ORG_WORKDIR:-${ORG_WORKDIR_DEFAULT}}"
if [[ ! -d "$ORG_WORKDIR" ]]; then
  ORG_WORKDIR="$PWD"
fi

ORG_STATE_DIR="${ORG_STATE_DIR:-$ORG_WORKDIR/.org}"
ORG_LOG_DIR="$ORG_STATE_DIR/logs"
ORG_TMUX_LOG_DIR="$ORG_LOG_DIR/tmux-logs"

ORG_TMUX_SOCKET="${ORG_TMUX_SOCKET:-org}"
ORG_TMUX_SESSION="${ORG_TMUX_SESSION:-org}"
ORG_TMUX_WINDOW="${ORG_TMUX_WINDOW:-0}"
ORG_TMUX_PANE="${ORG_TMUX_PANE:-0}"

ORG_ENTRY_BASE="${ORG_ENTRY_BASE:-bun $ORG_WORKDIR/src/app.ts --ui console}"
ORG_ENTRY="$ORG_ENTRY_BASE ${*:-}"

PANE_LOG="$ORG_LOG_DIR/pane-0.log"
INNER_LOG="$ORG_LOG_DIR/tmux-inner.log"

SHELL_BIN="${SHELL:-/bin/bash}"
SCRIPT_BIN="$(command -v script || true)"

mkdir -p "$ORG_STATE_DIR" "$ORG_LOG_DIR" "$ORG_TMUX_LOG_DIR"

# -------- Generate inner runner ----------------------------------------------
INNER_RUNNER="$ORG_STATE_DIR/tmux-inner.sh"
cat >"$INNER_RUNNER" <<'EOF'
#!/usr/bin/env bash
set -Eeuo pipefail

LOG_DIR="${ORG_LOG_DIR:?}"
APP_LOG="${INNER_LOG:?}"
ENTRY="${ORG_ENTRY:?}"
SHELL_BIN="${SHELL_BIN:-/bin/bash}"
SCRIPT_BIN="${SCRIPT_BIN:-}"

{
  echo "===== org tmux-inner start: $(date -Is) ====="
  echo "[inner] cwd=$(pwd) uid=$(id -u):$(id -g) PATH=$PATH"
  echo "[inner] entry: \$ENTRY"
} >>"$APP_LOG" 2>&1

if [[ -n "$SCRIPT_BIN" ]]; then
  exec "$SCRIPT_BIN" -qfe -c "$ENTRY" "$APP_LOG"
fi

exec "$SHELL_BIN" -lc "$ENTRY 2>&1 | tee -a \"$APP_LOG\"; exit \${PIPESTATUS[0]}"
EOF
chmod +x "$INNER_RUNNER"

export ORG_LOG_DIR ORG_TMUX_LOG_DIR INNER_LOG="$INNER_LOG" ORG_ENTRY="$ORG_ENTRY" SHELL_BIN SCRIPT_BIN

# -------- tmux bootstrap -----------------------------------------------------
export TMUX_TMPDIR="${TMUX_TMPDIR:-/tmp}"
tmux -L "$ORG_TMUX_SOCKET" start-server

if ! tmux -L "$ORG_TMUX_SOCKET" has-session -t "$ORG_TMUX_SESSION" 2>/dev/null; then
  tmux -L "$ORG_TMUX_SOCKET" new-session -d -s "$ORG_TMUX_SESSION" -n main "exec \"$INNER_RUNNER\""

  # Key fix: auto-exit when the pane closes (so Ctrl+C returns you to shell)
  tmux -L "$ORG_TMUX_SOCKET" set-option -t "$ORG_TMUX_SESSION" destroy-unattached on
  tmux -L "$ORG_TMUX_SOCKET" set-option -t "$ORG_TMUX_SESSION" exit-empty on

  tmux -L "$ORG_TMUX_SOCKET" pipe-pane \
    -t "$ORG_TMUX_SESSION:$ORG_TMUX_WINDOW.$ORG_TMUX_PANE" \
    -o "ts %H:%M:%.S >> \"$PANE_LOG\""
fi

tmux -L "$ORG_TMUX_SOCKET" pipe-pane \
  -t "$ORG_TMUX_SESSION:$ORG_TMUX_WINDOW.$ORG_TMUX_PANE" \
  -o "ts %H:%M:%.S >> \"$PANE_LOG\"" || true

# -------- Attach --------------------------------------------------------------
exec tmux -L "$ORG_TMUX_SOCKET" attach -t "$ORG_TMUX_SESSION"
