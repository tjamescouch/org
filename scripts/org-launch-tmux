#!/usr/bin/env bash
# scripts/org-launch-tmux
# Writes /work/.org/{tmux.conf, tmux-inner.sh} safely (no heredocs) and starts tmux.

set -Eeuo pipefail

ORG_DIR="${ORG_RUNTIME_DIR:-/work/.org}"
LOG_DIR="${ORG_DIR}/logs"
TMUX_CONF="${ORG_DIR}/tmux.conf"
INNER_SH="${ORG_DIR}/tmux-inner.sh"

BUN_BIN="${ORG_BUN_BIN:-/usr/local/bin/bun}"
TMUX_BIN="${ORG_TMUX_BIN:-/usr/bin/tmux}"
APP_ENTRY="/work/src/app.ts"

# Disable nested sandboxing and the internal tmux bootstrap path in app
export SANDBOX_BACKEND="${SANDBOX_BACKEND:-none}"
export ORG_SANDBOX_BACKEND="${ORG_SANDBOX_BACKEND:-none}"
export ORG_EXTERNAL_TMUX_BOOTSTRAP=1

# Avoid accidental editor invocation during bootstrap
export EDITOR=true VISUAL=true GIT_EDITOR=true PAGER=cat

mkdir -p "${LOG_DIR}"
chmod 700 "${ORG_DIR}" || true

write_tmux_conf() {
  {
    printf '%s\n' '# org-tmux-conf v4 (shell launcher sentinel)'
    printf '%s\n' 'set -s exit-empty off'     # keep server up if last session dies
    printf '%s\n' 'setw -g remain-on-exit on'  # keep pane visible on app exit
    printf '%s\n' 'set -g mouse on'
    printf '%s\n' 'set -g history-limit 100000'
    printf '%s\n' 'set -g default-terminal "tmux-256color"'
    printf '%s\n' 'set -as terminal-overrides ",xterm-256color:Tc,tmux-256color:Tc"'
    printf '%s\n' 'set -g focus-events on'
    printf '%s\n' 'set -s escape-time 0'
    printf '%s\n' 'set -s quiet on'
  } > "${TMUX_CONF}"
  chmod 600 "${TMUX_CONF}"
}

write_inner_sh() {
  {
    printf '%s\n' '#!/usr/bin/env bash'
    printf '%s\n' 'set -Eeuo pipefail'
    printf '%s\n' 'LOG_DIR="/work/.org/logs"'
    printf '%s\n' 'LOG_FILE="${LOG_DIR}/tmux-inner.log"'
    printf '%s\n' 'APP_ENTRY="/work/src/app.ts"'
    printf '%s\n' 'BUN_BIN="${ORG_BUN_BIN:-/usr/local/bin/bun}"'
    printf '%s\n' 'export ORG_EXTERNAL_TMUX_BOOTSTRAP=1'
    printf '%s\n' 'mkdir -p "${LOG_DIR}"'
    printf '%s\n' 'load_org_env() {'
    printf '%s\n' '  if [[ -f /work/.org/env ]]; then set -a; . /work/.org/env; set +a; fi'
    printf '%s\n' '  if compgen -G "/work/.org/env.d/*.env" >/dev/null; then'
    printf '%s\n' '    for f in /work/.org/env.d/*.env; do [[ -f "$f" ]] && { set -a; . "$f"; set +a; }; done'
    printf '%s\n' '  fi'
    printf '%s\n' '}'
    printf '%s\n' 'load_org_env'
    printf '%s\n' 'echo "===== org tmux-inner start: $(date -Is) =====" | tee -a "${LOG_FILE}"'
    printf '%s\n' 'set +e'
    printf '%s\n' '"${BUN_BIN}" "${APP_ENTRY}" --ui console 2>&1 | tee -a "${LOG_FILE}"'
    printf '%s\n' 'APP_CODE=${PIPESTATUS[0]}'
    printf '%s\n' 'set -e'
    printf '%s\n' 'exit "${APP_CODE}"'
  } > "${INNER_SH}"
  chmod 700 "${INNER_SH}"
}

[[ -x "${TMUX_BIN}" ]] || { echo "ERROR: tmux not found at ${TMUX_BIN}" >&2; exit 1; }
[[ -x "${BUN_BIN}"  ]] || { echo "ERROR: bun not found at ${BUN_BIN}"  >&2; exit 1; }
[[ -f "${APP_ENTRY}" ]] || { echo "ERROR: entrypoint not found: ${APP_ENTRY}" >&2; exit 42; }

write_tmux_conf
write_inner_sh

# Start tmux with private socket, then attach
"${TMUX_BIN}" -vv -f "${TMUX_CONF}" -L org \
  new-session -d -s org -n main "bash -lc '/work/.org/tmux-inner.sh'"
"${TMUX_BIN}" -L org attach -t org
